"""
Django settings for smart_closet project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-9pn&*w@_e74qxs*4)8u*+ewmw)ra9lx)^inu=(#^#%c0rhci+x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',  # 添加django-extensions支持
    'closet_app',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'smart_closet.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'closet_app/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'smart_closet.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# 生产环境下的静态文件收集目录
if not DEBUG:
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ========== Seafile 云盘配置 ========== 
SEAFILE_API_URL = 'YOUR_SEAFILE_API_URL'  # 你的 Seafile API 地址
SEAFILE_TOKEN = 'YOUR_SEAFILE_TOKEN'  # 你的 Seafile 个人token
SEAFILE_LIBRARY_ID = 'YOUR_SEAFILE_LIBRARY_ID'  # 你的库ID
SEAFILE_CLOSET_DIR = '/MyCloset/'  # 衣柜图片云端目录
SEAFILE_BODY_DIR = '/MyBody/'      # 人体图片云端目录
SEAFILE_TEMP_DIR = '/TEMP/'        # 临时文件云端目录
SEAFILE_COORD_DIR = '/MyCoord/'    # 搭配图片云端目录
SEAFILE_BASE_URL = 'YOUR_SEAFILE_BASE_URL'  # 下载直链前缀

# ========== Coze 配置 ==========
COZE_TOKEN = 'YOUR_COZE_TOKEN'
COZE_API_BASE = 'YOUR_COZE_API_BASE'
COZE_CLASSIFY_WORKFLOW_ID = 'YOUR_COZE_CLASSIFY_WORKFLOW_ID'  # 衣物分类工作流ID
COZE_OUTFIT_WORKFLOW_ID = 'YOUR_COZE_OUTFIT_WORKFLOW_ID'    # 衣物搭配工作流ID
COZE_WEATHER_WORKFLOW_ID = 'YOUR_COZE_WEATHER_WORKFLOW_ID'   # 天气查询工作流ID
COZE_MATCHING_WORKFLOW_ID = 'YOUR_COZE_MATCHING_WORKFLOW_ID'  # 天气搭配推荐工作流ID

# ========== 临时目录配置 ==========
TEMP_DIR = os.path.join(BASE_DIR, 'temp')
if not os.path.exists(TEMP_DIR):
    os.makedirs(TEMP_DIR)
