# docker build --platform=linux/amd64  . -f Dockerfile.esp32  -t hub.byted.org/vei/onesdk_esp32:v5.4
FROM hub.byted.org/codebase/ci_debian_bullseye:latest

# 安装基础编译工具链
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    make \
    cmake \
    lcov \
    git \
    pkg-config \
    wget \
    unzip \
    git \
    wget \
    flex \
    bison \
    gperf \
    python3 \
    python3-pip \
    python3-venv \
    cmake \
    ninja-build \
    ccache \
    libffi-dev \
    libssl-dev \
    dfu-util \
    libusb-1.0-0 \
    && rm -rf /var/lib/apt/lists/*

# 安装 ESP-IDF 工具链
ENV IDF_PATH=/opt/esp/esp-idf
ENV IDF_GITHUB_ASSETS="dl.espressif.cn/github_assets"

RUN mkdir -p /opt/esp && \
    cd /opt/esp && \
    git clone -b release/v5.4 --recursive https://github.com/espressif/esp-idf.git && \
    cd $IDF_PATH && \
    ./install.sh esp32

# 安装esp-adf
ENV ADF_PATH=/opt/esp/esp-adf

RUN mkdir -p /opt/esp && \
    cd /opt/esp && \
    git clone --recursive https://github.com/espressif/esp-adf.git && \
    cd $ADF_PATH && \
    ./install.sh esp32

# 设置环境变量
# ENV PATH="$PATH:/opt/esp/xtensa-esp32-elf/bin"
# ENV IDF_TOOLS_PATH=/opt/esp
RUN cd $IDF_PATH && . ./export.sh

# 创建工作目录
WORKDIR /app

# 复制项目文件到容器中
# COPY . .

# 构建 ESP32 项目
# RUN . $IDF_PATH/export.sh && idf.py build